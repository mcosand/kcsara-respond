// <auto-generated />
using System;
using Kcsara.Respond.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

namespace Kcsara.Respond.Data.Migrations.SqlServerMigrations
{
    [DbContext(typeof(SqlServerRespondDbContext))]
    partial class SqlServerRespondDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("respond")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Kcsara.Respond.Data.ActivityRow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long>("Created")
                        .HasColumnType("bigint");

                    b.Property<long?>("EndTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Number")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StartTime")
                        .HasColumnType("bigint");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.Property<string>("Updater")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Activities");
                });

            modelBuilder.Entity("Kcsara.Respond.Data.RespondingUnitRow", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<long?>("Activated")
                        .HasColumnType("bigint");

                    b.Property<Guid>("ActivityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Requested")
                        .HasColumnType("bigint");

                    b.Property<long>("Updated")
                        .HasColumnType("bigint");

                    b.Property<string>("Updater")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.ToTable("RespondingUnits");
                });

            modelBuilder.Entity("Kcsara.Respond.Data.ActivityRow", b =>
                {
                    b.OwnsOne("Kcsara.Respond.Data.ActivityLocation", "Location", b1 =>
                        {
                            b1.Property<Guid>("ActivityRowId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<Geometry>("Geometry")
                                .HasColumnType("geography");

                            b1.Property<string>("Name")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("PropertiesJson")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("Wkid")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("ActivityRowId");

                            b1.ToTable("Activities");

                            b1.WithOwner()
                                .HasForeignKey("ActivityRowId");
                        });

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Kcsara.Respond.Data.RespondingUnitRow", b =>
                {
                    b.HasOne("Kcsara.Respond.Data.ActivityRow", "Activity")
                        .WithMany("Units")
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Activity");
                });

            modelBuilder.Entity("Kcsara.Respond.Data.ActivityRow", b =>
                {
                    b.Navigation("Units");
                });
#pragma warning restore 612, 618
        }
    }
}
